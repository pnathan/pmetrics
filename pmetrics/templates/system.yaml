apiVersion: apps/v1
kind: Deployment
metadata:
  name: pmetrics
  labels:
    app: pmetrics
spec:
  replicas: 10
  selector:
    matchLabels:
      app: pmetrics
  strategy:
    rollingUpdate:
      maxSurge: "100%"
      # 20% available to take traffic
      maxUnavailable: "50%"
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pmetrics
        version: v18
    spec:
      # requests should be done in < 1s
      terminationGracePeriodSeconds: 5

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - pmetrics
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: pmetrics
          image: "{{ .Values.image }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 1337

          startupProbe:
            httpGet:
              path: /healthz
              port: liveness-port
            failureThreshold: 30
            periodSeconds: 10



          # # am I alive?
          # livenessProbe:
          #     httpGet:
          #       path: /healthz
          #       port: 1337
          #     failureThreshold: 1
          #     initialDelaySeconds: 3
          #     timeoutSeconds: 10
          #     periodSeconds: 15

          # can I take traffic?
          readinessProbe:
              httpGet:
                path: /healthz
                port: 1337
              initialDelaySeconds: 3
              failureThreshold: 3
              timeoutSeconds: 30
              periodSeconds: 60

          env:
            - name: PGUSER
              value: {{ .Values.pguser }}
            - name: PGHOST
              value: {{ .Values.pghost }}
            - name: PGPORT
              value: "{{ .Values.pgport }}"
            - name: PGDATABASE
              value: {{ .Values.pgdatabase }}
            - name: PGPASSWORD
              value: {{ .Values.pgpassword }}
          resources:
            requests:
              memory: "10Mi"
              cpu: "10m"
            limits:
              memory: "500Mi"
              cpu: "1000m"
##############################
---
apiVersion: v1
kind: Service
metadata:
  name: pmetrics
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 1337
      name: http
  selector:
    app: pmetrics

##############################
---
# apiVersion: networking.k8s.io/v1
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: pmetrics
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - http:
      paths:
      - path: {{ .Values.ingressPath }}
        backend:
          serviceName: pmetrics
          servicePort: 80
